{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StarToken",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiObjective",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiMinObjective",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract StarToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiTokenPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "devTeamWallet",
          "type": "address"
        }
      ],
      "name": "CrowdfundingDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "weiObjective",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weiMinObjective",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "weiTokenPrice",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "devTeamWallet",
          "type": "address"
        }
      ],
      "name": "deployNewCrowdfunding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "instances",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb9ab77ce6b7abc5b5901b9677dc80884b792ee37f4525b5df316332e9305bbe4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1923316",
    "logsBloom": "0x
    "blockHash": "0x9ee60784edb62242cb34e954c8abc61b718cbe48336ce41e9f9eab2caeffe574",
    "transactionHash": "0xb9ab77ce6b7abc5b5901b9677dc80884b792ee37f4525b5df316332e9305bbe4",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xb9ab77ce6b7abc5b5901b9677dc80884b792ee37f4525b5df316332e9305bbe4",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x9ee60784edb62242cb34e954c8abc61b718cbe48336ce41e9f9eab2caeffe574"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "1923316",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "solcInputHash": "814dbd40af2d5ffdb74edff265b7cd76",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StarToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiObjective\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiMinObjective\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract StarToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiTokenPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"devTeamWallet\",\"type\":\"address\"}],\"name\":\"CrowdfundingDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiObjective\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weiMinObjective\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weiTokenPrice\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"devTeamWallet\",\"type\":\"address\"}],\"name\":\"deployNewCrowdfunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"instances\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Handles deploying new instances of the crowdfunding contract\",\"events\":{\"CrowdfundingDeployed(uint256,uint256,address,address,uint256,address)\":{\"details\":\"Event representing a deployed crowdfunding instance\",\"params\":{\"beneficiary\":\"The crowdfunding beneficiary wallet address\",\"devTeamWallet\":\"The development team wallet address\",\"token\":\"The contract token\",\"weiMinObjective\":\"The minimum objective of the crowdfunding in wei\",\"weiObjective\":\"The objective of the crowdfunding in wei\",\"weiTokenPrice\":\"The token price of a Star Token in wei for the deployed contract\"}}},\"kind\":\"dev\",\"methods\":{\"deployNewCrowdfunding(uint256,uint256,address,uint256,address)\":{\"details\":\"Deploy a new crowdfunding instance\",\"params\":{\"beneficiary\":\"The crowdfunding beneficiary wallet address\",\"devTeamWallet\":\"The development team wallet address\",\"weiMinObjective\":\"The minimum objective of the crowdfunding in wei\",\"weiObjective\":\"The objective of the crowdfunding in wei\",\"weiTokenPrice\":\"The token price of a Star Token in wei for the deployed contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"instances\":{\"details\":\"The deployed instances of the crowdfunding token \"},\"token\":{\"details\":\"The contract token \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdfundingDeployer.sol\":\"CrowdfundingDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    function _grantRole(bytes32 role, address account) private {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    function _revokeRole(bytes32 role, address account) private {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x183481af1c40d2efb26b86f63d6fe9e22f24c87e436d60a69f261b38500e7cd6\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0xfe0edb09653ed10e8a1bfe03eb9b0ff06775666eee817a95bd3d0799f1ee2b44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/Crowdfunding.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport '@openzeppelin/contracts/access/AccessControl.sol';\\r\\nimport '@openzeppelin/contracts/utils/Address.sol';\\r\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\r\\nimport './StarToken.sol';\\r\\n\\r\\n/**\\r\\n * @dev Representation of a crowdfunding for a student proposal.\\r\\n *\\r\\n * This contract when deployed allow investors to fund a student proposal and get\\r\\n * rewarded with Star tokens.\\r\\n *\\r\\n * In case of the crowdfunding not reaching the minimum wei objetive it also handles\\r\\n * refunding the investors.\\r\\n */\\r\\ncontract Crowdfunding is AccessControl, ReentrancyGuard {\\r\\n  using Address for address payable;\\r\\n\\r\\n  bytes32 public constant FINALIZER_ROLE = keccak256('FINALIZER_ROLE');\\r\\n\\r\\n  enum CrowdfundingStatus {\\r\\n    IN_PROGRESS,\\r\\n    SUCCESS,\\r\\n    FAIL\\r\\n  }\\r\\n\\r\\n  /** @dev The target token of this crowdfunding */\\r\\n  StarToken private immutable token;\\r\\n\\r\\n  /** @dev The price of one token in wei **/\\r\\n  uint256 public immutable weiTokenPrice;\\r\\n\\r\\n  /** @dev The objective total wei of this crowdfunding instance */\\r\\n  uint256 public immutable weiObjective;\\r\\n\\r\\n  /** @dev The minimum objective total wei of this crowdfunding instance */\\r\\n  uint256 public immutable weiMinObjective;\\r\\n\\r\\n  /** @dev The beneficiary wallet address */\\r\\n  address payable public immutable beneficiary;\\r\\n\\r\\n  /** @dev The total invested wei in this crowdfunding instance */\\r\\n  uint256 public totalInvestedWei;\\r\\n\\r\\n  /** @dev A dictionary binding the investor wallets with the respective invested value */\\r\\n  mapping(address => uint256) private investments;\\r\\n\\r\\n  /** @dev The current state of this crowdfunding */\\r\\n  CrowdfundingStatus public status;\\r\\n\\r\\n  /** @dev The development team wallet address */\\r\\n  address payable public immutable devTeamWallet;\\r\\n\\r\\n  constructor(\\r\\n    uint256 _weiObjective,\\r\\n    uint256 _weiMinObjective,\\r\\n    StarToken _token,\\r\\n    address payable _beneficiary,\\r\\n    uint256 _weiTokenPrice,\\r\\n    address payable _devTeamWallet\\r\\n  ) {\\r\\n    require(_weiObjective > 0, 'Objective should be a positive.');\\r\\n    require(_weiTokenPrice > 0, 'Token price should be positive.');\\r\\n\\r\\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\r\\n\\r\\n    token = _token;\\r\\n    beneficiary = _beneficiary;\\r\\n    weiObjective = _weiObjective;\\r\\n    weiMinObjective = _weiMinObjective;\\r\\n    status = CrowdfundingStatus.IN_PROGRESS;\\r\\n    weiTokenPrice = _weiTokenPrice;\\r\\n    devTeamWallet = _devTeamWallet;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Calculates the number of rewarded tokens generated upon a investment of wei\\r\\n   */\\r\\n  function calculateReward(uint256 _weiAmount) internal view returns (uint256) {\\r\\n    return _weiAmount / weiTokenPrice;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev An event that represents that a reward has been generated through an investment\\r\\n   */\\r\\n  event InvestmentRewarded(address indexed investorWallet, uint256 reward);\\r\\n\\r\\n  /**\\r\\n   * @dev Mint the reward for previously made investments and send it to the wallet of the claimer\\r\\n   */\\r\\n  function claimReward() public nonReentrant {\\r\\n    require(status == CrowdfundingStatus.SUCCESS, 'No rewards available.');\\r\\n\\r\\n    address payable investorWallet = payable(msg.sender);\\r\\n    uint256 investment = investments[investorWallet];\\r\\n\\r\\n    require(investment > 0, 'No reward for address.');\\r\\n\\r\\n    uint256 reward = calculateReward(investment);\\r\\n\\r\\n    token.mint(investorWallet, reward);\\r\\n    emit InvestmentRewarded(investorWallet, reward);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev A event that carry information about a wei investment made in this contract\\r\\n   * @param wallet The wallet of the investor\\r\\n   * @param weiAmount The invested wei amount\\r\\n   */\\r\\n  event Invested(address indexed wallet, uint256 weiAmount);\\r\\n\\r\\n  /**\\r\\n   * @dev Invest an amount of wei into this crowdfunding instance\\r\\n   */\\r\\n  function invest() public payable nonReentrant {\\r\\n    require(\\r\\n      status == CrowdfundingStatus.IN_PROGRESS,\\r\\n      'Crowdfunding is finalized.'\\r\\n    );\\r\\n\\r\\n    address payable investorWallet = payable(msg.sender);\\r\\n    uint256 weiValue = msg.value;\\r\\n\\r\\n    require(weiValue > 0, 'Investments should be positive.');\\r\\n\\r\\n    investments[investorWallet] += weiValue;\\r\\n    totalInvestedWei += weiValue;\\r\\n\\r\\n    emit Invested(investorWallet, weiValue);\\r\\n\\r\\n    if (totalInvestedWei >= weiObjective) {\\r\\n      _finalize();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev A event that carry information about wei withdraws made by the student\\r\\n   * @param wallet The wallet of the contract beneficiary\\r\\n   * @param weiAmount The amount of wei withdrawn\\r\\n   */\\r\\n  event InvestmentWithdrawn(address indexed wallet, uint256 weiAmount);\\r\\n\\r\\n  /**\\r\\n   * @dev Withdraw the wei investment of a successful crowdfunding instance to\\r\\n   * the wallet of the beneficiary student\\r\\n   */\\r\\n  function withdraw() public nonReentrant {\\r\\n    require(status == CrowdfundingStatus.SUCCESS, 'Unable to withdraw.');\\r\\n    require(totalInvestedWei > 0, 'Already withdrawn.');\\r\\n\\r\\n    beneficiary.sendValue(totalInvestedWei);\\r\\n    emit InvestmentWithdrawn(beneficiary, totalInvestedWei);\\r\\n    totalInvestedWei = 0;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev A event that carry information about the finalization act of this instance\\r\\n   * @param beneficiaryWallet The wallet of the contract beneficiary\\r\\n   * @param status The inferred final status of the contract\\r\\n   */\\r\\n  event Finalized(address indexed beneficiaryWallet, CrowdfundingStatus status);\\r\\n\\r\\n  /**\\r\\n   * @dev Finalize this crowdfunding contract, inferring its final status and allowing for\\r\\n   * withdraws, reward claims, and refundings\\r\\n   */\\r\\n  function finalize() public onlyRole(FINALIZER_ROLE) {\\r\\n    _finalize();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev A event that carry information about a reward minted for the contract owner wallet\\r\\n   * @param wallet The wallet of the contract owner\\r\\n   * @param amount The amount of tokens rewarded\\r\\n   */\\r\\n  event PlatformRewarded(address indexed wallet, uint256 amount);\\r\\n\\r\\n  /**\\r\\n   * @dev Mints a token reward to the development team wallet\\r\\n   */\\r\\n  function mintPlatformReward() private {\\r\\n    uint256 amount = calculateReward(totalInvestedWei) / 20;\\r\\n    token.mint(devTeamWallet, amount);\\r\\n    emit PlatformRewarded(devTeamWallet, amount);\\r\\n  }\\r\\n\\r\\n  function _finalize() private {\\r\\n    status = totalInvestedWei >= weiMinObjective\\r\\n      ? CrowdfundingStatus.SUCCESS\\r\\n      : CrowdfundingStatus.FAIL;\\r\\n    emit Finalized(beneficiary, status);\\r\\n    if (status == CrowdfundingStatus.SUCCESS) {\\r\\n      mintPlatformReward();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev A event that carry information about a refunding made to a investor\\r\\n   */\\r\\n  event InvestmentRefunded(address indexed _wallet, uint256 weiAmount);\\r\\n\\r\\n  /**\\r\\n   * @dev Refunds all the wei invested by an investor to its wallet\\r\\n   */\\r\\n  function refund() public nonReentrant {\\r\\n    require(status == CrowdfundingStatus.FAIL, 'Unable to refund.');\\r\\n\\r\\n    address payable wallet = payable(msg.sender);\\r\\n    uint256 value = investments[wallet];\\r\\n\\r\\n    require(investments[wallet] > 0, 'No investments for address.');\\r\\n\\r\\n    totalInvestedWei -= value;\\r\\n    wallet.sendValue(value);\\r\\n\\r\\n    emit InvestmentRefunded(wallet, value);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xa06359f0d30d1576f3de878a5f41edb3342f668bacdd9681ff01556f279cac5c\",\"license\":\"UNLICENSED\"},\"contracts/CrowdfundingDeployer.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\r\\nimport '@openzeppelin/contracts/utils/Address.sol';\\r\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\r\\nimport './StarToken.sol';\\r\\nimport './Crowdfunding.sol';\\r\\n\\r\\n/**\\r\\n * @dev Handles deploying new instances of the crowdfunding contract\\r\\n */\\r\\ncontract CrowdfundingDeployer is Ownable, ReentrancyGuard {\\r\\n  using Address for address payable;\\r\\n\\r\\n  /** @dev The contract token */\\r\\n  StarToken private immutable token;\\r\\n\\r\\n  /** @dev The deployed instances of the crowdfunding token */\\r\\n  mapping(address => address[]) public instances;\\r\\n\\r\\n  constructor(StarToken _token) {\\r\\n    token = _token;\\r\\n  }\\r\\n\\r\\n  function validateCrowdfundingDeploy(address payable _beneficiary)\\r\\n    private\\r\\n    view\\r\\n  {\\r\\n    address[] memory currentInstances = instances[_beneficiary];\\r\\n    if (currentInstances.length > 0) {\\r\\n      Crowdfunding lastActive = Crowdfunding(\\r\\n        currentInstances[currentInstances.length - 1]\\r\\n      );\\r\\n      require(\\r\\n        lastActive.status() != Crowdfunding.CrowdfundingStatus.IN_PROGRESS,\\r\\n        'Already in progress instance.'\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Event representing a deployed crowdfunding instance\\r\\n   * @param weiObjective The objective of the crowdfunding in wei\\r\\n   * @param weiMinObjective The minimum objective of the crowdfunding in wei\\r\\n   * @param token The contract token\\r\\n   * @param beneficiary The crowdfunding beneficiary wallet address\\r\\n   * @param weiTokenPrice The token price of a Star Token in wei for the deployed contract\\r\\n   * @param devTeamWallet The development team wallet address\\r\\n   */\\r\\n  event CrowdfundingDeployed(\\r\\n    uint256 weiObjective,\\r\\n    uint256 weiMinObjective,\\r\\n    StarToken token,\\r\\n    address payable beneficiary,\\r\\n    uint256 weiTokenPrice,\\r\\n    address payable devTeamWallet\\r\\n  );\\r\\n\\r\\n  /**\\r\\n   * @dev Deploy a new crowdfunding instance\\r\\n   * @param weiObjective The objective of the crowdfunding in wei\\r\\n   * @param weiMinObjective The minimum objective of the crowdfunding in wei\\r\\n   * @param beneficiary The crowdfunding beneficiary wallet address\\r\\n   * @param weiTokenPrice The token price of a Star Token in wei for the deployed contract\\r\\n   * @param devTeamWallet The development team wallet address\\r\\n   */\\r\\n  function deployNewCrowdfunding(\\r\\n    uint256 weiObjective,\\r\\n    uint256 weiMinObjective,\\r\\n    address payable beneficiary,\\r\\n    uint256 weiTokenPrice,\\r\\n    address payable devTeamWallet\\r\\n  ) public onlyOwner nonReentrant {\\r\\n    validateCrowdfundingDeploy(beneficiary);\\r\\n    Crowdfunding instance = new Crowdfunding(\\r\\n      weiObjective,\\r\\n      weiMinObjective,\\r\\n      token,\\r\\n      beneficiary,\\r\\n      weiTokenPrice,\\r\\n      devTeamWallet\\r\\n    );\\r\\n    instances[beneficiary].push(address(instance));\\r\\n    emit CrowdfundingDeployed(\\r\\n      weiObjective,\\r\\n      weiMinObjective,\\r\\n      token,\\r\\n      beneficiary,\\r\\n      weiTokenPrice,\\r\\n      devTeamWallet\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x5d9c1dc1920b2f9dd18cf702c15e4d85fec272eb0c1d00a27b2670203af795e5\",\"license\":\"UNLICENSED\"},\"contracts/StarToken.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/access/AccessControl.sol';\\r\\n\\r\\n/**\\r\\n * @title StarToken\\r\\n *\\r\\n * @dev Implementation of the Star Token, a ERC20 token which is minted as\\r\\n * reward for student crowdfundings.\\r\\n **/\\r\\ncontract StarToken is ERC20, AccessControl {\\r\\n  bytes32 public constant MINTER_ROLE = keccak256('MINTER_ROLE');\\r\\n  bytes32 public constant BURNER_ROLE = keccak256('BURNER_ROLE');\\r\\n\\r\\n  constructor(address owner, uint256 initialSupply) ERC20('StarToken', 'STAR') {\\r\\n    _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\\r\\n    _mint(owner, initialSupply);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev An event that carry information about a token mintage\\r\\n   * @param to The wallet to where the minted tokens was allocated\\r\\n   * @param amount The amount of tokens minted\\r\\n   */\\r\\n  event Minted(address indexed to, uint256 amount);\\r\\n\\r\\n  /**\\r\\n   * @dev Mint coins and send it to a given wallet\\r\\n   */\\r\\n  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\\r\\n    _mint(to, amount);\\r\\n    emit Minted(to, amount);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev An event that carry information about a token burn\\r\\n   * @param from The wallet from which the tokens were burn\\r\\n   * @param amount The amount of tokens burn\\r\\n   */\\r\\n  event Burned(address indexed from, uint256 amount);\\r\\n\\r\\n  /**\\r\\n   * @dev Burn coins from a given wallet\\r\\n   */\\r\\n  function burn(address from, uint256 amount) public onlyRole(BURNER_ROLE) {\\r\\n    _burn(from, amount);\\r\\n    emit Burned(from, amount);\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x0f640e83b57b018640c808c622299cf22a51ae074b56c7f79eb8b17cec02c790\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161221338038061221383398101604081905261002f916100ac565b61003f61003a610058565b61005c565b6001805560601b6001600160601b0319166080526100da565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bd578081fd5b81516001600160a01b03811681146100d3578182fd5b9392505050565b60805160601c6121146100ff60003960008181610161015261023301526121146000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806327f8331d14620000635780634a927eb2146200007c578063715018a614620000ab5780638da5cb5b14620000b5578063f2fde38b14620000bf575b600080fd5b6200007a62000074366004620005fb565b620000d6565b005b620000936200008d366004620005ac565b62000273565b604051620000a2919062000655565b60405180910390f35b6200007a620002ac565b6200009362000300565b6200007a620000d036600462000586565b6200030f565b620000e06200038c565b6001600160a01b0316620000f362000300565b6001600160a01b031614620001255760405162461bcd60e51b81526004016200011c90620006af565b60405180910390fd5b600260015414156200014b5760405162461bcd60e51b81526004016200011c906200071b565b60026001556200015b8362000390565b600085857f0000000000000000000000000000000000000000000000000000000000000000868686604051620001919062000578565b620001a29695949392919062000752565b604051809103906000f080158015620001bf573d6000803e3d6000fd5b506001600160a01b0385811660009081526002602090815260408083208054600181018255908452919092200180546001600160a01b03191692841692909217909155519091507ff2d23ee9407b8e749e2b2cdfbaa109af1bcc21f31c517ba007adefa7cea56032906200025f90889088907f00000000000000000000000000000000000000000000000000000000000000009089908990899062000752565b60405180910390a150506001805550505050565b600260205281600052604060002081815481106200029057600080fd5b6000918252602090912001546001600160a01b03169150829050565b620002b66200038c565b6001600160a01b0316620002c962000300565b6001600160a01b031614620002f25760405162461bcd60e51b81526004016200011c90620006af565b620002fe600062000528565b565b6000546001600160a01b031690565b620003196200038c565b6001600160a01b03166200032c62000300565b6001600160a01b031614620003555760405162461bcd60e51b81526004016200011c90620006af565b6001600160a01b0381166200037e5760405162461bcd60e51b81526004016200011c9062000669565b620003898162000528565b50565b3390565b6001600160a01b038116600090815260026020908152604080832080548251818502810185019093528083529192909190830182828015620003fc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003dd575b5050505050905060008151111562000524576000816001835162000421919062000786565b815181106200044057634e487b7160e01b600052603260045260246000fd5b60200260200101519050600060028111156200046c57634e487b7160e01b600052602160045260246000fd5b816001600160a01b031663200d2ed26040518163ffffffff1660e01b815260040160206040518083038186803b158015620004a657600080fd5b505afa158015620004bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e19190620005da565b60028111156200050157634e487b7160e01b600052602160045260246000fd5b1415620005225760405162461bcd60e51b81526004016200011c90620006e4565b505b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61191e80620007c183390190565b60006020828403121562000598578081fd5b8135620005a581620007aa565b9392505050565b60008060408385031215620005bf578081fd5b8235620005cc81620007aa565b946020939093013593505050565b600060208284031215620005ec578081fd5b815160038110620005a5578182fd5b600080600080600060a0868803121562000613578081fd5b853594506020860135935060408601356200062e81620007aa565b92506060860135915060808601356200064781620007aa565b809150509295509295909350565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416c726561647920696e2070726f677265737320696e7374616e63652e000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b95865260208601949094526001600160a01b039283166040860152908216606085015260808401521660a082015260c00190565b600082821015620007a557634e487b7160e01b81526011600452602481fd5b500390565b6001600160a01b03811681146200038957600080fdfe6101406040523480156200001257600080fd5b506040516200191e3803806200191e8339810160408190526200003591620001a0565b6001805585620000625760405162461bcd60e51b815260040162000059906200020f565b60405180910390fd5b60008211620000855760405162461bcd60e51b8152600401620000599062000246565b62000092600033620000d9565b6001600160601b0319606094851b811660805292841b83166101005260c09590955260e0939093526004805460ff1916905560a0929092529190911b166101205262000296565b620000e58282620000e9565b5050565b620000f5828262000173565b620000e5576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200012f6200019c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b60008060008060008060c08789031215620001b9578182fd5b86519550602087015194506040870151620001d4816200027d565b6060880151909450620001e7816200027d565b608088015160a0890151919450925062000201816200027d565b809150509295509295509295565b6020808252601f908201527f4f626a6563746976652073686f756c64206265206120706f7369746976652e00604082015260600190565b6020808252601f908201527f546f6b656e2070726963652073686f756c6420626520706f7369746976652e00604082015260600190565b6001600160a01b03811681146200029357600080fd5b50565b60805160601c60a05160c05160e0516101005160601c6101205160601c6115f06200032e6000396000818161036901528181610fca0152611028015260008181610423015281816104e40152818161050c0152610cf6015260008181610a180152610c850152600081816106e301526109df015260008181610a3c0152610d8c0152600081816107f10152610f9d01526115f06000f3fe60806040526004361061011f5760003560e01c8063590e1ae3116100a0578063cdf32cab11610064578063cdf32cab146102d5578063d547741f146102ea578063e8b5e51f1461030a578063ea8d0f9a14610312578063ee56cf41146103275761011f565b8063590e1ae31461026157806376b8948d1461027657806391d148541461028b578063a217fddf146102ab578063b88a802f146102c05761011f565b806336568abe116100e757806336568abe146101ed57806338af3eed1461020d5780633ccfd60b146102225780633df55efd146102375780634bb278f31461024c5761011f565b806301ffc9a7146101245780631a607ebe1461015a578063200d2ed21461017c578063248a9ca31461019e5780632f2ff15d146101cb575b600080fd5b34801561013057600080fd5b5061014461013f3660046110dc565b61033c565b60405161015191906111a9565b60405180910390f35b34801561016657600080fd5b5061016f610367565b604051610151919061117c565b34801561018857600080fd5b5061019161038b565b60405161015191906111bd565b3480156101aa57600080fd5b506101be6101b936600461108a565b610394565b60405161015191906111b4565b3480156101d757600080fd5b506101eb6101e63660046110a2565b6103a9565b005b3480156101f957600080fd5b506101eb6102083660046110a2565b6103d2565b34801561021957600080fd5b5061016f610421565b34801561022e57600080fd5b506101eb610445565b34801561024357600080fd5b506101be610578565b34801561025857600080fd5b506101eb61059c565b34801561026d57600080fd5b506101eb6105d4565b34801561028257600080fd5b506101be6106e1565b34801561029757600080fd5b506101446102a63660046110a2565b610705565b3480156102b757600080fd5b506101be61072e565b3480156102cc57600080fd5b506101eb610733565b3480156102e157600080fd5b506101be6108a4565b3480156102f657600080fd5b506101eb6103053660046110a2565b6108aa565b6101eb6108c9565b34801561031e57600080fd5b506101be610a16565b34801561033357600080fd5b506101be610a3a565b60006001600160e01b03198216637965db0b60e01b1480610361575061036182610a5e565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045460ff1681565b60009081526020819052604090206001015490565b6103b282610394565b6103c3816103be610a77565b610a7b565b6103cd8383610adf565b505050565b6103da610a77565b6001600160a01b0316816001600160a01b0316146104135760405162461bcd60e51b815260040161040a906114a0565b60405180910390fd5b61041d8282610b64565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015414156104685760405162461bcd60e51b815260040161040a90611432565b6002600190815560045460ff16600281111561049457634e487b7160e01b600052602160045260246000fd5b146104b15760405162461bcd60e51b815260040161040a906113d9565b6000600254116104d35760405162461bcd60e51b815260040161040a90611406565b60025461050a906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690610be7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fca2b4d68e42b50bb8686d4e808d2fb68c569d9b8f497cc8784d7fe315d889e8760025460405161056591906111b4565b60405180910390a2600060025560018055565b7f53ea8c2084bd069d8c2df22bdca7223415cd9c0b605c29d1a0d06f15fcd3eed481565b7f53ea8c2084bd069d8c2df22bdca7223415cd9c0b605c29d1a0d06f15fcd3eed46105c9816103be610a77565b6105d1610c83565b50565b600260015414156105f75760405162461bcd60e51b815260040161040a90611432565b6002600181905560045460ff16600281111561062357634e487b7160e01b600052602160045260246000fd5b146106405760405162461bcd60e51b815260040161040a9061124d565b336000818152600360205260409020548061066d5760405162461bcd60e51b815260040161040a90611278565b806002600082825461067f9190611546565b9091555061069890506001600160a01b03831682610be7565b816001600160a01b03167f36223d67e276b82c1b7ba6855d656a2b8071564264666ef7977022c5d8a64402826040516106d191906111b4565b60405180910390a2505060018055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b600260015414156107565760405162461bcd60e51b815260040161040a90611432565b6002600190815560045460ff16600281111561078257634e487b7160e01b600052602160045260246000fd5b1461079f5760405162461bcd60e51b815260040161040a9061137a565b33600081815260036020526040902054806107cc5760405162461bcd60e51b815260040161040a906113a9565b60006107d782610d85565b6040516340c10f1960e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906108289086908590600401611190565b600060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b50505050826001600160a01b03167f118b25248647f9ba8639886715e9714cb314e44a7bf767ebf60db679ec9827a88260405161089391906111b4565b60405180910390a250506001805550565b60025481565b6108b382610394565b6108bf816103be610a77565b6103cd8383610b64565b600260015414156108ec5760405162461bcd60e51b815260040161040a90611432565b6002600155600060045460ff16600281111561091857634e487b7160e01b600052602160045260246000fd5b146109355760405162461bcd60e51b815260040161040a90611343565b3334806109545760405162461bcd60e51b815260040161040a90611469565b6001600160a01b0382166000908152600360205260408120805483929061097c9084906114ef565b92505081905550806002600082825461099591906114ef565b92505081905550816001600160a01b03167fc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3826040516109d591906111b4565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000060025410610a0e57610a0e610c83565b505060018055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b610a858282610705565b61041d57610a9d816001600160a01b03166014610db1565b610aa8836020610db1565b604051602001610ab9929190611107565b60408051601f198184030181529082905262461bcd60e51b825261040a916004016111e5565b610ae98282610705565b61041d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b20610a77565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b6e8282610705565b1561041d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610ba3610a77565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b80471015610c075760405162461bcd60e51b815260040161040a9061130c565b6000826001600160a01b031682604051610c2090611104565b60006040518083038185875af1925050503d8060008114610c5d576040519150601f19603f3d011682016040523d82523d6000602084013e610c62565b606091505b50509050806103cd5760405162461bcd60e51b815260040161040a906112af565b7f00000000000000000000000000000000000000000000000000000000000000006002541015610cb4576002610cb7565b60015b6004805460ff19166001836002811115610ce157634e487b7160e01b600052602160045260246000fd5b02179055506004546040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f251a913b9509d81d7c0bf1032d3cbfc794041c71edc3d8e6ef416f45eb847e0591610d469160ff16906111bd565b60405180910390a2600160045460ff166002811115610d7557634e487b7160e01b600052602160045260246000fd5b1415610d8357610d83610f6a565b565b60006103617f000000000000000000000000000000000000000000000000000000000000000083611507565b60606000610dc0836002611527565b610dcb9060026114ef565b67ffffffffffffffff811115610df157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e1b576020820181803683370190505b509050600360fc1b81600081518110610e4457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e8157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610ea5846002611527565b610eb09060016114ef565b90505b6001811115610f44576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ef257634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610f1657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610f3d8161158d565b9050610eb3565b508315610f635760405162461bcd60e51b815260040161040a90611218565b9392505050565b60006014610f79600254610d85565b610f839190611507565b6040516340c10f1960e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990610ff4907f0000000000000000000000000000000000000000000000000000000000000000908590600401611190565b600060405180830381600087803b15801561100e57600080fd5b505af1158015611022573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f740c3e1985f075c79de5f105c7fc16384c57c765812ec03c021f4c5d4231880f8260405161107f91906111b4565b60405180910390a250565b60006020828403121561109b578081fd5b5035919050565b600080604083850312156110b4578081fd5b8235915060208301356001600160a01b03811681146110d1578182fd5b809150509250929050565b6000602082840312156110ed578081fd5b81356001600160e01b031981168114610f63578182fd5b90565b60007f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008252835161113f81601785016020880161155d565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161117081602884016020880161155d565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60208101600383106111df57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208252825180602084015261120481604085016020870161155d565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601190820152702ab730b13632903a37903932b33ab7321760791b604082015260600190565b6020808252601b908201527f4e6f20696e766573746d656e747320666f7220616464726573732e0000000000604082015260600190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252601a908201527f43726f776466756e64696e672069732066696e616c697a65642e000000000000604082015260600190565b6020808252601590820152742737903932bbb0b932399030bb30b4b630b136329760591b604082015260600190565b6020808252601690820152752737903932bbb0b932103337b91030b2323932b9b99760511b604082015260600190565b6020808252601390820152722ab730b13632903a37903bb4ba34323930bb9760691b604082015260600190565b60208082526012908201527120b63932b0b23c903bb4ba34323930bbb71760711b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601f908201527f496e766573746d656e74732073686f756c6420626520706f7369746976652e00604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115611502576115026115a4565b500190565b60008261152257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611541576115416115a4565b500290565b600082821015611558576115586115a4565b500390565b60005b83811015611578578181015183820152602001611560565b83811115611587576000848401525b50505050565b60008161159c5761159c6115a4565b506000190190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a92e1bbad45fef2c50a9a2578a86e7ebca7906f4797c06d3653cfb20f4da7d2164736f6c63430008000033a2646970667358221220a272dc9d2cb6526a9f239145a0bf57d9e7b5eacf33d0689daccacfd3db37fbae64736f6c63430008000033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c806327f8331d14620000635780634a927eb2146200007c578063715018a614620000ab5780638da5cb5b14620000b5578063f2fde38b14620000bf575b600080fd5b6200007a62000074366004620005fb565b620000d6565b005b620000936200008d366004620005ac565b62000273565b604051620000a2919062000655565b60405180910390f35b6200007a620002ac565b6200009362000300565b6200007a620000d036600462000586565b6200030f565b620000e06200038c565b6001600160a01b0316620000f362000300565b6001600160a01b031614620001255760405162461bcd60e51b81526004016200011c90620006af565b60405180910390fd5b600260015414156200014b5760405162461bcd60e51b81526004016200011c906200071b565b60026001556200015b8362000390565b600085857f0000000000000000000000000000000000000000000000000000000000000000868686604051620001919062000578565b620001a29695949392919062000752565b604051809103906000f080158015620001bf573d6000803e3d6000fd5b506001600160a01b0385811660009081526002602090815260408083208054600181018255908452919092200180546001600160a01b03191692841692909217909155519091507ff2d23ee9407b8e749e2b2cdfbaa109af1bcc21f31c517ba007adefa7cea56032906200025f90889088907f00000000000000000000000000000000000000000000000000000000000000009089908990899062000752565b60405180910390a150506001805550505050565b600260205281600052604060002081815481106200029057600080fd5b6000918252602090912001546001600160a01b03169150829050565b620002b66200038c565b6001600160a01b0316620002c962000300565b6001600160a01b031614620002f25760405162461bcd60e51b81526004016200011c90620006af565b620002fe600062000528565b565b6000546001600160a01b031690565b620003196200038c565b6001600160a01b03166200032c62000300565b6001600160a01b031614620003555760405162461bcd60e51b81526004016200011c90620006af565b6001600160a01b0381166200037e5760405162461bcd60e51b81526004016200011c9062000669565b620003898162000528565b50565b3390565b6001600160a01b038116600090815260026020908152604080832080548251818502810185019093528083529192909190830182828015620003fc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003dd575b5050505050905060008151111562000524576000816001835162000421919062000786565b815181106200044057634e487b7160e01b600052603260045260246000fd5b60200260200101519050600060028111156200046c57634e487b7160e01b600052602160045260246000fd5b816001600160a01b031663200d2ed26040518163ffffffff1660e01b815260040160206040518083038186803b158015620004a657600080fd5b505afa158015620004bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004e19190620005da565b60028111156200050157634e487b7160e01b600052602160045260246000fd5b1415620005225760405162461bcd60e51b81526004016200011c90620006e4565b505b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61191e80620007c183390190565b60006020828403121562000598578081fd5b8135620005a581620007aa565b9392505050565b60008060408385031215620005bf578081fd5b8235620005cc81620007aa565b946020939093013593505050565b600060208284031215620005ec578081fd5b815160038110620005a5578182fd5b600080600080600060a0868803121562000613578081fd5b853594506020860135935060408601356200062e81620007aa565b92506060860135915060808601356200064781620007aa565b809150509295509295909350565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416c726561647920696e2070726f677265737320696e7374616e63652e000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b95865260208601949094526001600160a01b039283166040860152908216606085015260808401521660a082015260c00190565b600082821015620007a557634e487b7160e01b81526011600452602481fd5b500390565b6001600160a01b03811681146200038957600080fdfe6101406040523480156200001257600080fd5b506040516200191e3803806200191e8339810160408190526200003591620001a0565b6001805585620000625760405162461bcd60e51b815260040162000059906200020f565b60405180910390fd5b60008211620000855760405162461bcd60e51b8152600401620000599062000246565b62000092600033620000d9565b6001600160601b0319606094851b811660805292841b83166101005260c09590955260e0939093526004805460ff1916905560a0929092529190911b166101205262000296565b620000e58282620000e9565b5050565b620000f5828262000173565b620000e5576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200012f6200019c565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3390565b60008060008060008060c08789031215620001b9578182fd5b86519550602087015194506040870151620001d4816200027d565b6060880151909450620001e7816200027d565b608088015160a0890151919450925062000201816200027d565b809150509295509295509295565b6020808252601f908201527f4f626a6563746976652073686f756c64206265206120706f7369746976652e00604082015260600190565b6020808252601f908201527f546f6b656e2070726963652073686f756c6420626520706f7369746976652e00604082015260600190565b6001600160a01b03811681146200029357600080fd5b50565b60805160601c60a05160c05160e0516101005160601c6101205160601c6115f06200032e6000396000818161036901528181610fca0152611028015260008181610423015281816104e40152818161050c0152610cf6015260008181610a180152610c850152600081816106e301526109df015260008181610a3c0152610d8c0152600081816107f10152610f9d01526115f06000f3fe60806040526004361061011f5760003560e01c8063590e1ae3116100a0578063cdf32cab11610064578063cdf32cab146102d5578063d547741f146102ea578063e8b5e51f1461030a578063ea8d0f9a14610312578063ee56cf41146103275761011f565b8063590e1ae31461026157806376b8948d1461027657806391d148541461028b578063a217fddf146102ab578063b88a802f146102c05761011f565b806336568abe116100e757806336568abe146101ed57806338af3eed1461020d5780633ccfd60b146102225780633df55efd146102375780634bb278f31461024c5761011f565b806301ffc9a7146101245780631a607ebe1461015a578063200d2ed21461017c578063248a9ca31461019e5780632f2ff15d146101cb575b600080fd5b34801561013057600080fd5b5061014461013f3660046110dc565b61033c565b60405161015191906111a9565b60405180910390f35b34801561016657600080fd5b5061016f610367565b604051610151919061117c565b34801561018857600080fd5b5061019161038b565b60405161015191906111bd565b3480156101aa57600080fd5b506101be6101b936600461108a565b610394565b60405161015191906111b4565b3480156101d757600080fd5b506101eb6101e63660046110a2565b6103a9565b005b3480156101f957600080fd5b506101eb6102083660046110a2565b6103d2565b34801561021957600080fd5b5061016f610421565b34801561022e57600080fd5b506101eb610445565b34801561024357600080fd5b506101be610578565b34801561025857600080fd5b506101eb61059c565b34801561026d57600080fd5b506101eb6105d4565b34801561028257600080fd5b506101be6106e1565b34801561029757600080fd5b506101446102a63660046110a2565b610705565b3480156102b757600080fd5b506101be61072e565b3480156102cc57600080fd5b506101eb610733565b3480156102e157600080fd5b506101be6108a4565b3480156102f657600080fd5b506101eb6103053660046110a2565b6108aa565b6101eb6108c9565b34801561031e57600080fd5b506101be610a16565b34801561033357600080fd5b506101be610a3a565b60006001600160e01b03198216637965db0b60e01b1480610361575061036182610a5e565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045460ff1681565b60009081526020819052604090206001015490565b6103b282610394565b6103c3816103be610a77565b610a7b565b6103cd8383610adf565b505050565b6103da610a77565b6001600160a01b0316816001600160a01b0316146104135760405162461bcd60e51b815260040161040a906114a0565b60405180910390fd5b61041d8282610b64565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015414156104685760405162461bcd60e51b815260040161040a90611432565b6002600190815560045460ff16600281111561049457634e487b7160e01b600052602160045260246000fd5b146104b15760405162461bcd60e51b815260040161040a906113d9565b6000600254116104d35760405162461bcd60e51b815260040161040a90611406565b60025461050a906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690610be7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fca2b4d68e42b50bb8686d4e808d2fb68c569d9b8f497cc8784d7fe315d889e8760025460405161056591906111b4565b60405180910390a2600060025560018055565b7f53ea8c2084bd069d8c2df22bdca7223415cd9c0b605c29d1a0d06f15fcd3eed481565b7f53ea8c2084bd069d8c2df22bdca7223415cd9c0b605c29d1a0d06f15fcd3eed46105c9816103be610a77565b6105d1610c83565b50565b600260015414156105f75760405162461bcd60e51b815260040161040a90611432565b6002600181905560045460ff16600281111561062357634e487b7160e01b600052602160045260246000fd5b146106405760405162461bcd60e51b815260040161040a9061124d565b336000818152600360205260409020548061066d5760405162461bcd60e51b815260040161040a90611278565b806002600082825461067f9190611546565b9091555061069890506001600160a01b03831682610be7565b816001600160a01b03167f36223d67e276b82c1b7ba6855d656a2b8071564264666ef7977022c5d8a64402826040516106d191906111b4565b60405180910390a2505060018055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600081565b600260015414156107565760405162461bcd60e51b815260040161040a90611432565b6002600190815560045460ff16600281111561078257634e487b7160e01b600052602160045260246000fd5b1461079f5760405162461bcd60e51b815260040161040a9061137a565b33600081815260036020526040902054806107cc5760405162461bcd60e51b815260040161040a906113a9565b60006107d782610d85565b6040516340c10f1960e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906108289086908590600401611190565b600060405180830381600087803b15801561084257600080fd5b505af1158015610856573d6000803e3d6000fd5b50505050826001600160a01b03167f118b25248647f9ba8639886715e9714cb314e44a7bf767ebf60db679ec9827a88260405161089391906111b4565b60405180910390a250506001805550565b60025481565b6108b382610394565b6108bf816103be610a77565b6103cd8383610b64565b600260015414156108ec5760405162461bcd60e51b815260040161040a90611432565b6002600155600060045460ff16600281111561091857634e487b7160e01b600052602160045260246000fd5b146109355760405162461bcd60e51b815260040161040a90611343565b3334806109545760405162461bcd60e51b815260040161040a90611469565b6001600160a01b0382166000908152600360205260408120805483929061097c9084906114ef565b92505081905550806002600082825461099591906114ef565b92505081905550816001600160a01b03167fc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3826040516109d591906111b4565b60405180910390a27f000000000000000000000000000000000000000000000000000000000000000060025410610a0e57610a0e610c83565b505060018055565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160e01b031981166301ffc9a760e01b14919050565b3390565b610a858282610705565b61041d57610a9d816001600160a01b03166014610db1565b610aa8836020610db1565b604051602001610ab9929190611107565b60408051601f198184030181529082905262461bcd60e51b825261040a916004016111e5565b610ae98282610705565b61041d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b20610a77565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610b6e8282610705565b1561041d576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610ba3610a77565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b80471015610c075760405162461bcd60e51b815260040161040a9061130c565b6000826001600160a01b031682604051610c2090611104565b60006040518083038185875af1925050503d8060008114610c5d576040519150601f19603f3d011682016040523d82523d6000602084013e610c62565b606091505b50509050806103cd5760405162461bcd60e51b815260040161040a906112af565b7f00000000000000000000000000000000000000000000000000000000000000006002541015610cb4576002610cb7565b60015b6004805460ff19166001836002811115610ce157634e487b7160e01b600052602160045260246000fd5b02179055506004546040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f251a913b9509d81d7c0bf1032d3cbfc794041c71edc3d8e6ef416f45eb847e0591610d469160ff16906111bd565b60405180910390a2600160045460ff166002811115610d7557634e487b7160e01b600052602160045260246000fd5b1415610d8357610d83610f6a565b565b60006103617f000000000000000000000000000000000000000000000000000000000000000083611507565b60606000610dc0836002611527565b610dcb9060026114ef565b67ffffffffffffffff811115610df157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610e1b576020820181803683370190505b509050600360fc1b81600081518110610e4457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610e8157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000610ea5846002611527565b610eb09060016114ef565b90505b6001811115610f44576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610ef257634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110610f1657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93610f3d8161158d565b9050610eb3565b508315610f635760405162461bcd60e51b815260040161040a90611218565b9392505050565b60006014610f79600254610d85565b610f839190611507565b6040516340c10f1960e01b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990610ff4907f0000000000000000000000000000000000000000000000000000000000000000908590600401611190565b600060405180830381600087803b15801561100e57600080fd5b505af1158015611022573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f740c3e1985f075c79de5f105c7fc16384c57c765812ec03c021f4c5d4231880f8260405161107f91906111b4565b60405180910390a250565b60006020828403121561109b578081fd5b5035919050565b600080604083850312156110b4578081fd5b8235915060208301356001600160a01b03811681146110d1578182fd5b809150509250929050565b6000602082840312156110ed578081fd5b81356001600160e01b031981168114610f63578182fd5b90565b60007f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008252835161113f81601785016020880161155d565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161117081602884016020880161155d565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b60208101600383106111df57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208252825180602084015261120481604085016020870161155d565b601f01601f19169190910160400192915050565b6020808252818101527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604082015260600190565b6020808252601190820152702ab730b13632903a37903932b33ab7321760791b604082015260600190565b6020808252601b908201527f4e6f20696e766573746d656e747320666f7220616464726573732e0000000000604082015260600190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252601a908201527f43726f776466756e64696e672069732066696e616c697a65642e000000000000604082015260600190565b6020808252601590820152742737903932bbb0b932399030bb30b4b630b136329760591b604082015260600190565b6020808252601690820152752737903932bbb0b932103337b91030b2323932b9b99760511b604082015260600190565b6020808252601390820152722ab730b13632903a37903bb4ba34323930bb9760691b604082015260600190565b60208082526012908201527120b63932b0b23c903bb4ba34323930bbb71760711b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252601f908201527f496e766573746d656e74732073686f756c6420626520706f7369746976652e00604082015260600190565b6020808252602f908201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560408201526e103937b632b9903337b91039b2b63360891b606082015260800190565b60008219821115611502576115026115a4565b500190565b60008261152257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611541576115416115a4565b500290565b600082821015611558576115586115a4565b500390565b60005b83811015611578578181015183820152602001611560565b83811115611587576000848401525b50505050565b60008161159c5761159c6115a4565b506000190190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a92e1bbad45fef2c50a9a2578a86e7ebca7906f4797c06d3653cfb20f4da7d2164736f6c63430008000033a2646970667358221220a272dc9d2cb6526a9f239145a0bf57d9e7b5eacf33d0689daccacfd3db37fbae64736f6c63430008000033",
  "devdoc": {
    "details": "Handles deploying new instances of the crowdfunding contract",
    "events": {
      "CrowdfundingDeployed(uint256,uint256,address,address,uint256,address)": {
        "details": "Event representing a deployed crowdfunding instance",
        "params": {
          "beneficiary": "The crowdfunding beneficiary wallet address",
          "devTeamWallet": "The development team wallet address",
          "token": "The contract token",
          "weiMinObjective": "The minimum objective of the crowdfunding in wei",
          "weiObjective": "The objective of the crowdfunding in wei",
          "weiTokenPrice": "The token price of a Star Token in wei for the deployed contract"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "deployNewCrowdfunding(uint256,uint256,address,uint256,address)": {
        "details": "Deploy a new crowdfunding instance",
        "params": {
          "beneficiary": "The crowdfunding beneficiary wallet address",
          "devTeamWallet": "The development team wallet address",
          "weiMinObjective": "The minimum objective of the crowdfunding in wei",
          "weiObjective": "The objective of the crowdfunding in wei",
          "weiTokenPrice": "The token price of a Star Token in wei for the deployed contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "instances": {
        "details": "The deployed instances of the crowdfunding token "
      },
      "token": {
        "details": "The contract token "
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/CrowdfundingDeployer.sol:CrowdfundingDeployer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 494,
        "contract": "contracts/CrowdfundingDeployer.sol:CrowdfundingDeployer",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2199,
        "contract": "contracts/CrowdfundingDeployer.sol:CrowdfundingDeployer",
        "label": "instances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}